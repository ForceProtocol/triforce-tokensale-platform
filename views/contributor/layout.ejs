<!DOCTYPE html>
<html lang="en">
    <head>
      <meta charset="utf-8">
      <title><%= typeof title == 'undefined' ? 'Force Protocol Ltd' : title %></title>
        <meta name="description" content="<%= typeof metaDescription == 'undefined' ? "" : metaDescription %>">

        <link rel="canonical" href="<%= "https://forceprotocol.io" + req.path %>" />

      <!-- Viewport mobile tag for sensible mobile support -->
      <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">

      <link href="//fonts.googleapis.com/css?family=Poppins:300,400,500,600" rel="stylesheet">

        <meta name="google-site-verification" content="Te36QGBZpJQvKPcD9WiupYrXQXMN3cQAuxRfk_T3hIQ" />

        <link rel="apple-touch-icon" sizes="57x57" href="/icons/apple-icon-57x57.png">
        <link rel="apple-touch-icon" sizes="60x60" href="/icons/apple-icon-60x60.png">
        <link rel="apple-touch-icon" sizes="72x72" href="/icons/apple-icon-72x72.png">
        <link rel="apple-touch-icon" sizes="76x76" href="/icons/apple-icon-76x76.png">
        <link rel="apple-touch-icon" sizes="114x114" href="/icons/apple-icon-114x114.png">
        <link rel="apple-touch-icon" sizes="120x120" href="/icons/apple-icon-120x120.png">
        <link rel="apple-touch-icon" sizes="144x144" href="/icons/apple-icon-144x144.png">
        <link rel="apple-touch-icon" sizes="152x152" href="/icons/apple-icon-152x152.png">
        <link rel="apple-touch-icon" sizes="180x180" href="/icons/apple-icon-180x180.png">
        <link rel="icon" type="image/png" sizes="192x192"  href="/icons/android-icon-192x192.png">
        <link rel="icon" type="image/png" sizes="32x32" href="/icons/favicon-32x32.png">
        <link rel="icon" type="image/png" sizes="96x96" href="/icons/favicon-96x96.png">
        <link rel="icon" type="image/png" sizes="16x16" href="/icons/favicon-16x16.png">
        <link rel="manifest" href="/icons/manifest.json">
        <meta name="msapplication-TileColor" content="#ffffff">
        <meta name="msapplication-TileImage" content="/icons/ms-icon-144x144.png">
        <meta name="theme-color" content="#ffffff">
 
      <!--STYLES-->
      <link rel="stylesheet" href="/styles/bootstrap.css">
      <link rel="stylesheet" href="/styles/fontawesome-all.min.css">
      <link rel="stylesheet" href="/styles/front.css">
      <link rel="stylesheet" href="/styles/animate.min.css">
      <link rel="stylesheet" href="/styles/cubeportfolio.min.css">
      <link rel="stylesheet" href="/styles/custom.css">
      <link rel="stylesheet" href="/styles/dzsparallaxer.css">
      <link rel="stylesheet" href="/styles/flatpickr.min.css">
      <link rel="stylesheet" href="/styles/hs.megamenu.css">
      <link rel="stylesheet" href="/styles/jquery.fancybox.css">
      <link rel="stylesheet" href="/styles/jquery.mCustomScrollbar.css">
      <link rel="stylesheet" href="/styles/slick.css">
      <link rel="stylesheet" href="/styles/toastr.min.css">
      <!--STYLES END-->

    </head>
    <body>


    <%- body %>


    <!--TEMPLATES-->
    
    <!--TEMPLATES END-->

    <div id="cookie-notice" style="display:none;" role="dialog" aria-live="polite" aria-label="cookieconsent" aria-describedby="cookieconsent:desc" class="cc-window cc-floating cc-type-opt-in cc-theme-block cc-bottom cc-right cc-color-override-382972913 " style=""><!--googleoff: all-->
      <span id="cookieconsent:desc" class="cc-message">
        <h5 class="h6">Force Protocol Ltd Cookies Policy</h5>
        <p>This website uses cookies to ensure you get the best experience on our website.</p>
        <a aria-label="learn more about cookies" tabindex="0" class="cc-link" href="/privacy">Learn more</a>
      </span>
      <div class="cc-compliance cc-highlight">
        <a aria-label="deny cookies" role="button" tabindex="0" class="cc-btn cc-deny">Decline</a>
        <a aria-label="allow cookies" role="button" tabindex="0" class="cc-btn cc-allow">Allow cookies</a>
      </div>
    </div>


    <script>
      window.intercomSettings = {
      app_id: "ucmtxxel"
      };
    </script>

    <!--SCRIPTS-->
    <script src="/js/jquery.min.js"></script>
    <script src="/js/jquery-migrate.min.js"></script>
    <script src="/js/popper.min.js"></script>
    <script src="/js/bootstrap.min.js"></script>
    <script src="/js/dependencies/sails.io.js"></script>
    <script src="/js/typed.min.js"></script>
    <script src="/js/hs.core.js"></script>
    <script src="/js/custom.js"></script>
    <script src="/js/dzsparallaxer.js"></script>
    <script src="/js/hs.cubeportfolio.js"></script>
    <script src="/js/hs.datatables.js"></script>
    <script src="/js/hs.fancybox.js"></script>
    <script src="/js/hs.focus-state.js"></script>
    <script src="/js/hs.go-to.js"></script>
    <script src="/js/hs.header.js"></script>
    <script src="/js/hs.malihu-scrollbar.js"></script>
    <script src="/js/hs.megamenu.js"></script>
    <script src="/js/hs.scroll-effect.js"></script>
    <script src="/js/hs.scroll-nav.js"></script>
    <script src="/js/hs.show-animation.js"></script>
    <script src="/js/hs.slick-carousel.js"></script>
    <script src="/js/hs.step-form.js"></script>
    <script src="/js/hs.sticky-block.js"></script>
    <script src="/js/hs.unfold.js"></script>
    <script src="/js/hs.validation.js"></script>
    <script src="/js/hs.video-player.js"></script>
    <script src="/js/jquery.cubeportfolio.min.js"></script>
    <script src="/js/jquery.dataTables.js"></script>
    <script src="/js/jquery.fancybox.min.js"></script>
    <script src="/js/jquery.mCustomScrollbar.concat.min.js"></script>
    <script src="/js/jquery.validate.min.js"></script>
    <script src="/js/slick.js"></script>
    <script src="/js/toastr.min.js"></script>
    <!--SCRIPTS END-->

    <script src='https://www.google.com/recaptcha/api.js'></script>


    <!-- JS Plugins Init. -->
    <script>
    
      $(window).on('load', function () {
        // initialization of HSMegaMenu component
        $('.js-mega-menu').HSMegaMenu({
          event: 'hover',
          pageContainer: $('body'),
          breakpoint: 767,
          hideTimeOut: 0
        });

        // initialization of HSScrollNav component
        $.HSCore.components.HSScrollNav.init($('#scrollNav'), {
          duration: 700
        });
        
      });

      $(document).on('ready', function () {

        // initialization of unfold component
        $.HSCore.components.HSUnfold.init($('[data-unfold-target]'), {
          afterOpen: function () {
            $(this).find('input[type="search"]').focus();
          }
        });

        // Datatables
        $.HSCore.components.HSDatatables.init('.js-datatable');

        // initialization of header
        $.HSCore.components.HSHeader.init($('#header'));

        // initialization of malihu scrollbar
        $.HSCore.components.HSMalihuScrollBar.init($('.js-scrollbar'));

        // initialization of forms
        $.HSCore.helpers.HSFocusState.init();

        // initialization of form validation
        $.HSCore.components.HSValidation.init('.js-validate', {
          rules: {
            confirmPassword: {
              equalTo: '#password'
            },
          }
        });

        // initialization of show animations
        $.HSCore.components.HSShowAnimation.init('.js-animation-link');

        // initialization of fancybox
        $.HSCore.components.HSFancyBox.init('.js-fancybox');

        // initialization of cubeportfolio
        $.HSCore.components.HSCubeportfolio.init('.cbp');

        // initialization of slick carousel
        $.HSCore.components.HSSlickCarousel.init('.js-slick-carousel');

        // initialization of go to
        $.HSCore.components.HSGoTo.init('.js-go-to');

        setTimeout(function () {
          $.HSCore.components.HSStickyBlock.init('.js-sticky-block');
        }, 300);

        <% if(req.path == "/contributor"){ %>
        $(function () {
            var $content = $('#mediumJsonContent');
            var data = {
              rss_url: 'https://medium.com/feed/@triforcetokens'
            };

            $.get('https://api.rss2json.com/v1/api.json', data, function (response) {
              if (response.status == 'ok') {
                var output = '';
                $.each(response.items, function (k, item) {
                  var visibleSm;

                  output += '<div class="col-lg-12 col-md-12 col-sm-12"><div class="row">';
                  output += '<div class="blog-post"><header>';
                  output += '<div class="blog-content"><h5><a href="'+ item.link + '">' + item.title + '</a></h5>';
                  var tagIndex = item.description.indexOf('<img'); // Find where the img tag starts
                  var srcIndex = item.description.substring(tagIndex).indexOf('src=') + tagIndex; // Find where the src attribute starts
                  var srcStart = srcIndex + 5; // Find where the actual image URL starts; 5 for the length of 'src="'
                  var srcEnd = item.description.substring(srcStart).indexOf('"') + srcStart; // Find where the URL ends
                  var src = item.description.substring(srcStart, srcEnd); // Extract just the URL
                  output += '<div class="blog-element"><img class="img-fluid" src="' + src + '" ></div></header>';
                  output += '<p><small>' + item.pubDate + "</small></p>";
                  var yourString = item.description.replace(/<img[^>]*>/g,""); //replace with your string.
                  var maxLength = 120 // maximum number of characters to extract
                  //trim the string to the maximum length
                  var trimmedString = yourString.substr(0, maxLength);
                  //re-trim if we are in the middle of a word
                  trimmedString = trimmedString.substr(0, Math.min(trimmedString.length, trimmedString.lastIndexOf(" ")))
                  output += '<p>' + trimmedString + '...</p>';
                  output += '</div></div></div></div>';
                  return k < 3;
                });
                $content.html(output);
              }
            });
          });
          <% } %>

          <% if(req.path == "/contributor/kyc"){ %>
            // initialization of step form
            $.HSCore.components.HSStepForm.init('.js-step-form');

            // initialization of show animations
            $.HSCore.components.HSShowAnimation.init('.js-animation-link');

            toastr.options = {
                      "closeButton": false,
                      "debug": false,
                      "newestOnTop": false,
                      "progressBar": false,
                      "positionClass": "toast-top-center",
                      "preventDuplicates": false,
                      "onclick": null,
                      "showDuration": "300",
                      "hideDuration": "1000",
                      "timeOut": "5000",
                      "extendedTimeOut": "1000",
                      "showEasing": "swing",
                      "hideEasing": "linear",
                      "showMethod": "fadeIn",
                      "hideMethod": "fadeOut"
                    }

            // Validate and submit form data step 1
            $('.save-bio-data').click(function(){
                $.post("/contributor/kyc-bio",$("#kycForm").serialize()).done(function(data) {
                  if(!data.success){
                    // Take user back to step 1 and display error msg
                    toastr["error"](data.msg, "Error");
                    $(".btn-back-to-bio" ).trigger("click");
                  }else{
                    toastr["success"](data.msg, "Success");
                  }
                }).fail(function(data) {
                  // Take user back to step 1 and display error msg
                    toastr["error"](data.responseJSON.msg, "Error");
                    $(".btn-back-to-bio" ).trigger("click");
                });
            });

            // Validate and submit form data step 1
            $('.save-eth-address').click(function(){
                $.post("/contributor/kyc-whitelist-eth-address",$("#kycForm").serialize()).done(function(data) {
                  if(!data.success){
                    // Take user back to step 1 and display error msg
                    toastr["error"](data.msg, "Error");
                    $(".btn-back-to-eth-address" ).trigger("click");
                  }else{
                    toastr["success"](data.msg, "Success");
                  }
                }).fail(function(data) {
                  // Take user back to step 1 and display error msg
                    toastr["error"](data.responseJSON.msg, "Error");
                    $(".btn-back-to-eth-address" ).trigger("click");
                });
            });



            // Process document image uploaded
            $(".document-image-upload-input").change(function (e){

                var fileName = $(this).val(),
                allowedExtensions = ["jpg","jpeg","gif","png"];

                var file = fileName.toLowerCase(),
                extension = file.substring(file.lastIndexOf('.') + 1);

                $('.documentIdLoadingGif').show();
                $("#documentIdFileImg").hide();


                // Make sure file not greater than 1MB
                if (window.FileReader && window.File && window.FileList && window.Blob ){
                  var fileSize = this.files[0].size;
                  if(fileSize > 1048576){
                    $(this).wrap('<form>').closest('form').get(0).reset();
                    $(this).unwrap();
                    toastr["error"]("The file size uploaded was greater than 1 MB. Please reduce the file size", "Error");
                    $('.documentIdLoadingGif').hide();
                    $("#documentIdFileImg").show();
                    return false;
                  }
                }

                if ($.inArray(extension,allowedExtensions) == -1) {
                    $(this).wrap('<form>').closest('form').get(0).reset();
                    $(this).unwrap();
                    toastr["error"]("You uploaded an invalid file type. Only images of type .jpg, .jpeg, .png or .gif are allowed.", "Error");
                    $('.documentIdLoadingGif').hide();
                    $("#documentIdFileImg").show();
                } else {
                  // File is valid - upload image and show
                  // Send image to backend to verify
                  // If valid, update passport image with this image and green tick
                  var data = new FormData();

                  $.each(e.target.files, function(key, value)
                  {
                      data.append("documentIdFile", value);
                  });

                  $.ajax({
                      url: '/contributor/upload-id-document',
                      type: 'POST',
                      method: 'POST',
                      data: data,
                      processData: false,
                      contentType: false,
                      cache: false
                  }).done(function(data) {
                    toastr["success"](data.msg, "Success");
                    $("#documentIdFileImg"). attr("src","/" + data.renderPublicLocation);
                    $('.documentIdLoadingGif').hide();
                    $("#documentIdFileImg").show();
                    $(".idDocumentSuccess").show();
                  }).fail(function(data) {
                      toastr["error"]("Failed to upload your file", "Error");
                      $('.documentIdLoadingGif').hide();
                      $("#documentIdFileImg").show();
                      $(".idDocumentSuccess").hide();
                  });
                }
             });


            // Process document image uploaded
            $(".selfie-image-upload-input").change(function (e){

                var fileName = $(this).val(),
                allowedExtensions = ["jpg","jpeg","gif","png"];

                var file = fileName.toLowerCase(),
                extension = file.substring(file.lastIndexOf('.') + 1);

                $('.selfieLoadingGif').show();
                $("#selfieFileImg").hide();


                // Make sure file not greater than 1MB
                if (window.FileReader && window.File && window.FileList && window.Blob ){
                  var fileSize = this.files[0].size;
                  if(fileSize > 1048576){
                    $(this).wrap('<form>').closest('form').get(0).reset();
                    $(this).unwrap();
                    toastr["error"]("The file size uploaded was greater than 1 MB. Please reduce the file size", "Error");
                    $('.selfieLoadingGif').hide();
                    $("#selfieFileImg").show();
                    return false;
                  }
                }

                if ($.inArray(extension,allowedExtensions) == -1) {
                    $(this).wrap('<form>').closest('form').get(0).reset();
                    $(this).unwrap();
                    toastr["error"]("You uploaded an invalid file type. Only images of type .jpg, .jpeg, .png or .gif are allowed.", "Error");
                    $('.selfieLoadingGif').hide();
                    $("#selfieFileImg").show();
                } else {
                  // File is valid - upload image and show
                  // Send image to backend to verify
                  // If valid, update passport image with this image and green tick
                  var data = new FormData();

                  $.each(e.target.files, function(key, value)
                  {
                      data.append("selfieFile", value);
                  });

                  $.ajax({
                      url: '/contributor/upload-selfie',
                      type: 'POST',
                      method: 'POST',
                      data: data,
                      processData: false,
                      contentType: false,
                      cache: false
                  }).done(function(data) {
                    toastr["success"](data.msg, "Success");
                    $("#selfieFileImg"). attr("src","/" + data.renderPublicLocation);
                    $('.selfieLoadingGif').hide();
                    $("#selfieFileImg").show();
                    $(".selfieSuccess").show();
                    letCompleteKyc();
                  }).fail(function(data) {
                      toastr["error"]("Failed to upload your file", "Error");
                      $('.selfieLoadingGif').hide();
                      $("#selfieFileImg").show();
                      $(".selfieSuccess").hide();
                  });
                }
             });


            $('.btn-complete-kyc').click(function(){
              if(letCompleteKyc()){
                $('#kycForm').hide();
                $('.formLoadingImg').show();
              }
            });

            function letCompleteKyc(){
              var documentFile = $("#documentIdInput").val(),
                selfieFile = $("#selfieInput").val(),
                documentIdFile = $(".documentIdFile").val(),
                selfieIdFile = $(".selfieIdFile").val();

                if((documentFile && selfieFile) || (documentIdFile && selfieIdFile)
                  || (documentFile && selfieIdFile) || (documentIdFile && selfieFile)){
                  $('.btn-complete-kyc').prop('disabled', false);
                  return true;
                }
                return false;
            }


          <% } %>


          <% if(req.path == "/contributor/buy-force"){ %>

            // initialization of step form
            $.HSCore.components.HSStepForm.init('.js-step-form');

            // initialization of show animations
            $.HSCore.components.HSShowAnimation.init('.js-animation-link');

            toastr.options = {
                "closeButton": false,
                "debug": false,
                "newestOnTop": false,
                "progressBar": false,
                "positionClass": "toast-top-center",
                "preventDuplicates": false,
                "onclick": null,
                "showDuration": "300",
                "hideDuration": "1000",
                "timeOut": "5000",
                "extendedTimeOut": "1000",
                "showEasing": "swing",
                "hideEasing": "linear",
                "showMethod": "fadeIn",
                "hideMethod": "fadeOut"
              }

            /** Set the public token sale open date */
            var dateNowUnix = Date.now();
            var tokenSaleOpenDate = new Date(Date.UTC(2018,9,8,12,0,0)).getTime();
            var tokenSaleCloseDate = new Date(Date.UTC(2018,10,11,12,0,0)).getTime();

            // Find the distance between now and the end date
            var openDistance = tokenSaleOpenDate - dateNowUnix;
            var closeDistance = tokenSaleCloseDate - dateNowUnix;

            // Time to token sale open
            if(openDistance > 0){
              $('.tokensale-opening').fadeIn();
              startDiscountTimeLeft(tokenSaleOpenDate);
            }
            // Token sale is LIVE
            else if(closeDistance > 0){
              $('.tokensale-open').fadeIn();
              startDiscountTimeLeft(tokenSaleCloseDate);
            }
            // Token sale is ENDED
            else{
              $('.tokensale-closed').fadeIn();
            }

            function startDiscountTimeLeft(endDateUnix){
                // Update the count down every 1 second
                var x = setInterval(function() {

                  dateNowUnix = Date.now();

                  // Find the distance between now and the count down date
                  distance = endDateUnix - dateNowUnix;

                  setTimeCountdown(distance);

                  // If the count down is finished, write some text 
                  if (distance < 2) {
                      clearInterval(x);
                  }
                }, 1000);
              }

              function setTimeCountdown(distance, timeClass){

                  if(typeof timeClass === 'undefined'){
                    timeClass = '';
                  }

                  // Time calculations for days, hours, minutes and seconds
                  var days = Math.floor(distance / (1000 * 60 * 60 * 24));
                  var hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
                  var minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));
                  var seconds = Math.floor((distance % (1000 * 60)) / 1000);

                  if(days < 1){
                    days = 0;
                  }
                  if(hours < 1){
                    hours = 0;
                  }
                  if(minutes < 1){
                    minutes = 0;
                  }
                  if(seconds < 1){
                    seconds = 0;
                  }

                  $('.js-days' + timeClass).text(days);
                  $('.js-hours' + timeClass).text(hours);
                  $('.js-minutes' + timeClass).text(minutes);
                  $('.js-seconds' + timeClass).text(seconds);
              }

              // Work out current bonus
              var discountRound1End = new Date(Date.UTC(2018,9,14,0,0,0)).getTime();
              var discountRound2End = new Date(Date.UTC(2018,9,21,0,0,0)).getTime();
              var discountRound3End = new Date(Date.UTC(2018,9,28,0,0,0)).getTime();

              var discountRound1Distance = discountRound1End - Date.now();
              var discountRound2Distance = discountRound2End - Date.now();
              var discountRound3Distance = discountRound3End - Date.now();

              // Round 1 Live
              var currentBonus = 0;
              if(discountRound1Distance > 0){
                $('.current-bonus').text("15");
                currentBonus = 15;
                startBonusTimeLeft(discountRound1End);
              }
              // Round 2 Live
              else if(discountRound2Distance > 0){
                $('.current-bonus').text("10");
                currentBonus = 10;
                startBonusTimeLeft(discountRound2End);
              }
              // Round 3 Live
              else if(discountRound3Distance > 0){
                $('.current-bonus').text("5");
                currentBonus = 5;
                startBonusTimeLeft(discountRound3End);
              }
              // Final round LIVE
              else {
                $('.current-bonus').text("0");
                $('.bonus-info').hide();
              }

              function startBonusTimeLeft(endDateUnix){
                // Update the count down every 1 second
                var z = setInterval(function() {

                  dateNowUnix = Date.now();

                  // Find the distance between now and the count down date
                  distanceD = endDateUnix - dateNowUnix;

                  setTimeCountdown(distanceD,"-bonus");

                  // If the count down is finished, write some text 
                  if (distanceD< 2) {
                      clearInterval(z);
                  }
                }, 1000);
              }


              // Validate and submit form data step 1
              $('.save-eth-address').click(function(){
                  $.post("/contributor/kyc-whitelist-eth-address",$("#kycForm").serialize()).done(function(data) {
                    if(!data.success){
                      // Take user back to step 1 and display error msg
                      toastr["error"](data.msg, "Error");
                      $(".btn-back-to-eth-address" ).trigger("click");
                    }else{
                      toastr["success"](data.msg, "Success");
                    }
                  }).fail(function(data) {
                    // Take user back to step 1 and display error msg
                      toastr["error"](data.responseJSON.msg, "Error");
                      $(".btn-back-to-eth-address" ).trigger("click");
                  });
              });


              // Calculate bonus force
              $('.force-qty').keyup(function(e){
                var forceQty = parseFloat($(this).val());
                var bonus = (forceQty / 100) * currentBonus;
                var totalForce = forceQty + bonus;
                $('.btn-create-order').prop('disabled',true); // Disable complete order since they didn't click Calculate Order

                if(!isNaN(forceQty)){
                  $('.selectedForce').text(forceQty);
                }
                if(!isNaN(bonus)){
                  $('.selectedBonusForce').text(bonus);
                }
                if(!isNaN(totalForce)){
                  $('.selectedTotalForce').text(totalForce);
                }
              });

              $('.purchase-currency').change(function(e){
                var selectedCurrency = $(this).val();

                switch(selectedCurrency){
                  case 'eth':
                    $('.selectedPaymentCurrency').text('ETH');
                  break;
                  case 'btc':
                    $('.selectedPaymentCurrency').text('BTC');
                  break;
                }

                calculateForce();
              });

              $('.calculate-force').click(function(){
                calculateForce();
              });

              function calculateForce(){
                var forceQty = parseFloat($('.force-qty').val()),
                  bonus = (forceQty / 100) * currentBonus,
                  totalForce = forceQty + bonus,
                  selectedCurrency = $('.purchase-currency').val();

                  if(!isNaN(forceQty)){
                    $('.selectedForce').text(forceQty);
                    $('.btn-create-order').prop('disabled',false);
                  }else{
                    return true;
                  }
                  if(!isNaN(bonus)){
                    $('.selectedBonusForce').text(bonus);
                  }
                  if(!isNaN(totalForce)){
                    $('.selectedTotalForce').text(totalForce);
                  }

                  switch(selectedCurrency){
                    case 'eth':
                      $('.selectedPaymentCurrency').text('ETH');

                      $.post("/contributor/calculator",{forceQty:forceQty,selectedCurrency:selectedCurrency}).done(function(data) {
                        if(!data.success){
                          toastr["error"](data.msg, "Error");
                        }else{
                          $('.selectedTotalForce').text(data.totalForce);
                          $('.selectedTotalDue').text(data.totalCurrencyRequired);
                          $('.totalForceUsd').text(data.totalForceUsd);
                          $('.current-bonus').text(data.currentBonus);
                        }
                      }).fail(function(data) {
                          toastr["error"](data.responseJSON.msg, "Error");
                      });
                    break;
                    case 'btc':
                      $('.selectedPaymentCurrency').text('BTC');

                      $.post("/contributor/calculator",{forceQty:forceQty,selectedCurrency:selectedCurrency}).done(function(data) {
                        if(!data.success){
                          toastr["error"](data.msg, "Error");
                        }else{
                          $('.selectedTotalForce').text(data.totalForce);
                          $('.selectedTotalDue').text(data.totalCurrencyRequired);
                          $('.totalForceUsd').text(data.totalForceUsd);
                          $('.current-bonus').text(data.currentBonus);
                        }
                      }).fail(function(data) {
                          toastr["error"](data.responseJSON.msg, "Error");
                      });
                    break;
                  }
              }

              

              $('.btn-create-order').click(function(e){
                var forceQty = parseFloat($('.force-qty').val()),
                  selectedCurrency = $('.purchase-currency').val();

                  $.post("/contributor/create-charge",{forceQty:forceQty,selectedCurrency:selectedCurrency}).done(function(data) {
                    if(!data.success){
                      toastr["error"](data.msg, "Error");
                    }else{
                      window.location.replace(data.hostedUrl);
                    }
                  }).fail(function(data) {
                      toastr["error"](data.responseJSON.msg, "Error");
                  });
              });

          <% } %>
      });

    </script>


    <!-- GOOGLE ANALYTICS -->
    <% if(sails.config.environment === 'production'){ %>
    <!-- Global site tag (gtag.js) - Google Analytics -->
    <script async src="https://www.googletagmanager.com/gtag/js?id=UA-104636616-1"></script>
    <script>
      window.dataLayer = window.dataLayer || [];
      function gtag(){dataLayer.push(arguments);}
    </script>
    <% }else{ %>
    <script>
      window.dataLayer = window.dataLayer || [];
      function gtag(){}
    </script>
    <% } %>

 
        <script>
          window.intercomSettings = {
            app_id: "ucmtxxel"
          };
        </script>
    </body>
</html>
